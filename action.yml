name: 'verible-formatter'
description: 'This action formats Verilog/SystemVerilog code'
author: 'Antmicro'
inputs:
  parameters:
    description: 'Additional parameters passed to formatter executable'
    required: false
    default: ''
  files:
    description: 'Optional array of files with source code to format'
    required: false
    default: './**/*.{v,sv}'
  github_token:
    description: 'GITHUB_TOKEN'
    default: ''
runs:
  using: 'composite'
  steps:
    - run: sudo apt update
      shell: bash
    - run: sudo apt install -y python3 wget python3-click golang-go
      shell: bash
    - run: mkdir verible && curl -s https://api.github.com/repos/chipsalliance/verible/releases/latest | jq '.assets[] | select(.browser_download_url | test("(?=.*Ubuntu-20.04)(?=.*x86_64)")).browser_download_url' | xargs wget -qO- | tar -zxvf - -C verible --strip-components=1
      shell: bash
    - run:  for i in $PWD/verible/bin/*; do sudo ln -s $i /bin/$(basename $i); done
      shell: bash
    - name: Install reviewdog
      run: |
        git clone https://github.com/reviewdog/reviewdog
        cd reviewdog
        git checkout 72c205e138df049330f2a668c33782cda55d61f6
        git apply ${{ github.action_path }}/reviewdog.patch
        mkdir ../bin
        go build all
        GOBIN=`pwd`/../bin go install ./cmd/reviewdog
        cd ..
        rm -rf reviewdog
        ./bin/reviewdog --version
      shell: bash
    - run: |
        event_file=event.json
        diff_cmd="git diff FECH_HEAD"
        if [ -f "$event_file" ]; then
            pr_branch=$(cat event.json | \
            python3 -c "import sys, json; print(json.load(sys.stdin)['pull_request']['head']['ref'])")
            base_branch=$(cat event.json | \
            python3 -c "import sys, json; print(json.load(sys.stdin)['pull_request']['base']['ref'])")
            git fetch origin $pr_branch
            git checkout $pr_branch
            echo "the PR branch is $pr_branch"
            echo "the base branch is $base_branch"
            diff_cmd="git diff $base_branch $pr_branch"
            export OVERRIDE_GITHUB_EVENT_PATH=`pwd`/event.json
        fi

        shopt -s globstar nullglob
        verible-verilog-format --inplace ${{ inputs.parameters }} ${{ inputs.files }} > /dev/null 2>&1
        rm -rf verible
        tmp_file=$(mktemp)
        git diff >"${tmp_file}"
        git stash
        export REVIEWDOG_GITHUB_API_TOKEN="${{ inputs.github_token }}"
        echo "running reviewdog"
        ./bin/reviewdog -name="verible-verilog-format" \
        -f=diff -f.diff.strip=1 \
        -reporter="github-pr-review" \
        -filter-mode="diff_context" \
        -level="info" \
        -diff="$diff_cmd" \
        -fail-on-error="false" <"${tmp_file}" || true
        this_change_should_break_this_flow
        echo "done running reviewdog"
        cat "${tmp_file}" | wc
        if [ -f "$event_file" ]; then
            git checkout -
        fi

      shell: bash
